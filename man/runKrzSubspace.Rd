% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runKrzSubspace.R
\name{runKrzSubspace}
\alias{runKrzSubspace}
\title{Run the Krzanowski subspace comparison}
\usage{
runKrzSubspace(matrix_array = NULL, models = NULL, type = c("P", "G"),
  ped = NULL, IDs = llply(ratones, function(x) x$info$ID), prob = 0.95)
}
\arguments{
\item{matrix_array}{array of posterior matrices with dimensions traits x traits x populations x MCMCsamples}

\item{models}{list of models, like ratones_models. Ignored if matrix_array is present.}

\item{type}{use P or G matrices from the models list. Ignored if matrix_array is present.}

\item{ped}{pedigree for null model simulation}

\item{IDs}{list of IDs for the individuals in each population. Each element must correspond to a populations, and IDs must be in the pedigree.}

\item{prob}{A numeric scalar in the interval (0,1) giving the target probability content of the posterior intervals for the eigenvalues of H.}
}
\value{
A data.frame with the observed and randomized intervals for the eigenvalues of H
}
\description{
Compares the H matrix eigenvalues between observed and randomized datasets,
using simulated beeding values from the pedigree.
}
\examples{
\dontrun{
out = runKrzSubspace(models = ratones_models, type = "P", ped = ratones_ped$ped)
#figure 2, Panel A
krz_subspace_plot = ggplot(out, aes(x = rank, y = mean, linetype = type, color = type)) +
  geom_point(position = position_dodge(width = 0.5)) +
  geom_linerange(aes(ymin = lower, ymax = upper), position = position_dodge(width = 0.5)) +
  labs(y = "Eigenvalues of H", x = "Eigenvectors of H") + background_grid(major = 'x', minor = "none") +
  panel_border() + theme(panel.grid.minor = element_line(colour = "grey", linetype = "dotted", size =0.2))+
  theme(legend.position = c(0.75, 0.9), text = element_text(size = 18)) +
  scale_colour_grey("", start = 0, end = 0.6) + scale_linetype(guide = "none")
#Panel B can be created in evolqg (but will take a long time!!):
matrix_array = laply(ratones_models, function(x) x$Ps)
matrix_array = aperm(matrix_array, c(3, 4, 1, 2))
dimnames(matrix_array)[[3]] = names(ratones_models)
rs_projection = RSProjection(matrix_array)
PlotRSprojection(rs_proj = rs_projection, cov.matrix.array = matrix_array)
}
}
